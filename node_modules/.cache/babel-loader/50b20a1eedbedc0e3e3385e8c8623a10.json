{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\expense\\\\src\\\\FormHandle.js\";\nimport React, { Component } from 'react';\nimport TotalSummary from './TotalSummary';\nimport { connect } from 'react-redux';\nimport { income, spending } from './store/action/action';\n\nclass FormHandle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputOnChange = e => {\n      if (e.target.name === 'cost') {\n        this.setState({\n          formValue: {\n            cost: e.target.value,\n            desc: this.desc.current.value\n          }\n        });\n      } else if (e.target.name === 'desc') {\n        this.setState({\n          formValue: {\n            cost: this.cost.current.value,\n            desc: e.target.value\n          }\n        });\n      }\n    };\n\n    this.cost = React.createRef();\n    this.desc = React.createRef();\n    this.expensive = React.createRef();\n    this.state = {\n      formValue: {\n        cost: '',\n        desc: ''\n      }\n    };\n  }\n\n  render() {\n    let checkDisState = this.props.show;\n    let incomeButton;\n\n    if (this.props.income === 'true') {\n      incomeButton = '<button type=\"reset\" name=\"submit\" onClick={() => this.props.income(\"INCOME\", this.cost.current.value, this.desc.current.value)}>Submit</button>';\n    } else {}\n\n    if (checkDisState === 'true') {\n      return React.createElement(\"form\", {\n        onSubmit: this.formSubmit,\n        ref: form => this.expensive = form,\n        id: \"expensive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Add Rs:\"), React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.formValue.cost,\n        ref: this.cost,\n        onChange: this.inputOnChange.bind(this.name),\n        name: \"cost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Describtion:\"), React.createElement(\"textarea\", {\n        value: this.state.formValue.desc,\n        ref: this.desc,\n        onChange: this.inputOnChange.bind(this.name),\n        name: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    balance: state.balance\n  };\n};\n\nconst mapDispatchToProps = () => {\n  return {\n    income,\n    spending\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps())(FormHandle);","map":{"version":3,"sources":["C:/xampp/htdocs/react/expense/src/FormHandle.js"],"names":["React","Component","TotalSummary","connect","income","spending","FormHandle","constructor","props","inputOnChange","e","target","name","setState","formValue","cost","value","desc","current","createRef","expensive","state","render","checkDisState","show","incomeButton","formSubmit","form","bind","mapStateToProps","balance","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport TotalSummary from './TotalSummary';\r\nimport {connect} from 'react-redux';\r\nimport {income, spending} from './store/action/action';\r\n\r\nclass FormHandle extends Component {\r\n  constructor (props) {\r\n      super(props);\r\n      this.cost = React.createRef();\r\n      this.desc = React.createRef();\r\n      this.expensive = React.createRef();\r\n      this.state = {\r\n          formValue: {\r\n            cost: '',\r\n            desc: ''\r\n        }\r\n      }\r\n  }\t\r\n\r\n  inputOnChange = (e) => {\r\n    if (e.target.name === 'cost') {\r\n        this.setState({\r\n            formValue: {                \r\n                cost: e.target.value,\r\n                desc: this.desc.current.value              \r\n            }\r\n        });\r\n    } else if (e.target.name === 'desc') {\r\n        this.setState({\r\n            formValue:  {\r\n                cost: this.cost.current.value,\r\n                desc: e.target.value \r\n            }\r\n        });\r\n    }  \t\r\n  }\r\n  render () {\r\n  \tlet checkDisState = this.props.show;\r\n  \tlet incomeButton;\r\n  \tif (this.props.income === 'true') {\r\n  \t\tincomeButton = '<button type=\"reset\" name=\"submit\" onClick={() => this.props.income(\"INCOME\", this.cost.current.value, this.desc.current.value)}>Submit</button>';\r\n  \t} else {\r\n  \t\t\r\n  \t}\r\n      if (checkDisState === 'true') {\r\n        return (\r\n            <form onSubmit={this.formSubmit} ref={form => this.expensive = form} id=\"expensive\">\r\n                <div>\r\n                  <label>Add Rs:</label>\t\r\n                  <input type=\"number\" value={this.state.formValue.cost} ref={this.cost} onChange={this.inputOnChange.bind(this.name)} name=\"cost\"/>\r\n                </div>\r\n                <div>\r\n                  <label>Describtion:</label>\r\n                  <textarea value={this.state.formValue.desc} ref={this.desc} onChange={this.inputOnChange.bind(this.name)} name=\"desc\"/>\r\n                </div>\r\n                \r\n            </form>                       \r\n        );\r\n      } else {\r\n          return (\r\n              <div></div>\r\n          );\r\n      } \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    balance: state.balance\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    income,\r\n    spending\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps())(FormHandle);\r\n"]},"metadata":{},"sourceType":"module"}